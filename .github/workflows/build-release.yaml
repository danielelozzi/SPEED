name: Build, Release and Publish

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  # --- JOB 1: Build degli eseguibili per la release ---
  build_executables:
    name: Build Executable on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
        include:
          - os: windows-latest
            asset_name: SpeedApp-v${{ github.ref_name }}.windows.zip
          - os: macos-latest
            asset_name: SpeedApp-v${{ github.ref_name }}.macos.zip

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Build with PyInstaller
        shell: bash
        run: |
          if [ "$RUNNER_OS" == "Windows" ]; then
            PYINSTALLER_FLAGS="--onefile"
          else
            PYINSTALLER_FLAGS="--onedir"
          fi
          # NOTA: il percorso al file GUI Ã¨ cambiato
          pyinstaller --noconfirm $PYINSTALLER_FLAGS --windowed --name "SpeedApp" ./desktop_app/GUI.py
      - name: Package the executable
        shell: bash
        run: |
          if [ "$RUNNER_OS" == "Windows" ]; then
            7z a ${{ matrix.asset_name }} ./dist/SpeedApp.exe
          else
            cd dist
            zip -r ../${{ matrix.asset_name }} ./SpeedApp.app
            cd ..
      - name: Upload artifact for release
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.asset_name }}
          path: ${{ matrix.asset_name }}

  # --- JOB 2: Crea la Release su GitHub ---
  create_release:
    name: Create GitHub Release
    needs: build_executables
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/**/*.zip

  # --- JOB 3: Pubblica il Package su PyPI ---
  publish_package:
    name: Publish Python Package to PyPI
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install build dependencies
        run: python -m pip install build
      - name: Build package
        run: python -m build
      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}